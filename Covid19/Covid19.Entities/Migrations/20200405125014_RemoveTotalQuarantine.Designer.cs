// <auto-generated />
using System;
using Covid19.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Covid19.Entities.Migrations
{
    [DbContext(typeof(RepositoryContext))]
    [Migration("20200405125014_RemoveTotalQuarantine")]
    partial class RemoveTotalQuarantine
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Covid19.Entities.Models.Graph", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("GraphId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2020, 4, 5, 21, 50, 12, 852, DateTimeKind.Local).AddTicks(6618));

                    b.Property<string>("Kazu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2020, 4, 5, 21, 50, 12, 862, DateTimeKind.Local).AddTicks(5625));

                    b.HasKey("Id");

                    b.ToTable("Graphs");
                });

            modelBuilder.Entity("Covid19.Entities.Models.Quarantine", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("QuarantineId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AutoKuarentena")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2020, 4, 5, 21, 50, 12, 863, DateTimeKind.Local).AddTicks(8325));

                    b.Property<int>("KuarentenaObrigatorio")
                        .HasColumnType("int");

                    b.Property<string>("Munisipio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PassaQuarentena")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2020, 4, 5, 21, 50, 12, 863, DateTimeKind.Local).AddTicks(9209));

                    b.HasKey("Id");

                    b.ToTable("Quarantines");
                });

            modelBuilder.Entity("Covid19.Entities.Models.Setting", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SettingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2020, 4, 5, 21, 50, 12, 867, DateTimeKind.Local).AddTicks(814));

                    b.Property<string>("Group")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Key")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2020, 4, 5, 21, 50, 12, 867, DateTimeKind.Local).AddTicks(2102));

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Settings");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1b115ba1-fc7d-4205-acc0-6ec229c236d3"),
                            CreatedAt = new DateTime(2020, 4, 5, 21, 50, 12, 867, DateTimeKind.Local).AddTicks(5712),
                            Group = "General",
                            Key = "site_name",
                            Name = "Site Name",
                            Type = "text",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Value = "LOREM-IPSUM"
                        },
                        new
                        {
                            Id = new Guid("89517199-a73b-4b6a-ab73-8e471dde804d"),
                            CreatedAt = new DateTime(2020, 4, 5, 21, 50, 12, 868, DateTimeKind.Local).AddTicks(5692),
                            Group = "General",
                            Key = "banner",
                            Name = "Banner Image",
                            Type = "file",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("e966513d-aa31-4795-991a-6806d63d0c0f"),
                            CreatedAt = new DateTime(2020, 4, 5, 21, 50, 12, 868, DateTimeKind.Local).AddTicks(5816),
                            Group = "General",
                            Key = "contact_address",
                            Name = "Contact address",
                            Type = "text",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Value = "Rua Delta 1, Aimutin Comoro, Dili. Timor-Leste"
                        },
                        new
                        {
                            Id = new Guid("b4e5bf4e-597d-4fb7-94e4-00a65009e4d2"),
                            CreatedAt = new DateTime(2020, 4, 5, 21, 50, 12, 868, DateTimeKind.Local).AddTicks(5851),
                            Group = "General",
                            Key = "contact_phone",
                            Name = "Contact phone",
                            Type = "text",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Value = "+(670) 331 017 9"
                        },
                        new
                        {
                            Id = new Guid("1e401920-ce4d-4167-92ef-d7f5400c60ee"),
                            CreatedAt = new DateTime(2020, 4, 5, 21, 50, 12, 868, DateTimeKind.Local).AddTicks(5858),
                            Group = "General",
                            Key = "contact_email",
                            Name = "Contact email",
                            Type = "email",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Value = "helder@chebre.net"
                        },
                        new
                        {
                            Id = new Guid("fdf65263-ea66-45a7-b732-638a36998170"),
                            CreatedAt = new DateTime(2020, 4, 5, 21, 50, 12, 868, DateTimeKind.Local).AddTicks(5872),
                            Group = "General",
                            Key = "footer_description",
                            Name = "Footer Description",
                            Type = "textarea",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Value = "In alias aperiam. Placeat tempore facere. Officiis voluptate ipsam vel eveniet est dolor et totam porro. Perspiciatis ad omnis fugit molestiae recusandae possimus. Aut consectetur id quis. In inventore consequatur ad voluptate cupiditate debitis accusamus repellat cumque.	"
                        },
                        new
                        {
                            Id = new Guid("a3fe951c-7178-4626-84ac-d2d948662089"),
                            CreatedAt = new DateTime(2020, 4, 5, 21, 50, 12, 868, DateTimeKind.Local).AddTicks(5878),
                            Group = "General",
                            Key = "twitter",
                            Name = "Twitter",
                            Type = "text",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Value = "#!"
                        },
                        new
                        {
                            Id = new Guid("7fe8e36c-c1c4-4a77-af9a-868570a49107"),
                            CreatedAt = new DateTime(2020, 4, 5, 21, 50, 12, 868, DateTimeKind.Local).AddTicks(5942),
                            Group = "General",
                            Key = "facebook",
                            Name = "Facebook",
                            Type = "text",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Value = "#!"
                        },
                        new
                        {
                            Id = new Guid("04871f27-a277-4672-aa23-8ba40c2957e7"),
                            CreatedAt = new DateTime(2020, 4, 5, 21, 50, 12, 868, DateTimeKind.Local).AddTicks(5949),
                            Group = "General",
                            Key = "instagram",
                            Name = "Instagram",
                            Type = "text",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Value = "#!"
                        },
                        new
                        {
                            Id = new Guid("53ada9a5-fb30-4d3e-a464-8bb974510681"),
                            CreatedAt = new DateTime(2020, 4, 5, 21, 50, 12, 868, DateTimeKind.Local).AddTicks(5958),
                            Group = "General",
                            Key = "linkedin",
                            Name = "LinkedIn",
                            Type = "text",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Value = "#!"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
